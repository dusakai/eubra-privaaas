"""empty message

Revision ID: 794a9e454ce4
Revises: 
Create Date: 2017-11-04 00:30:43.752116

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '794a9e454ce4'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('data_source',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('enabled', sa.Boolean(), nullable=True),
    sa.Column('read_only', sa.Boolean(), nullable=True),
    sa.Column('url', sa.String(length=200), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('format', sa.Enum('__module__', 'XML_FILE', 'NETCDF4', 'HDF5', 'SHAPEFILE', 'TEXT', 'CUSTOM', 'JSON', 'CSV', 'PICKLE', '__dict__', '__weakref__', '__doc__', name='DataSourceFormatEnumType'), nullable=True),
    sa.Column('provenience', sa.Text(), nullable=True),
    sa.Column('estimated_rows', sa.Integer(), nullable=True),
    sa.Column('estimated_size_in_mega_bytes', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('expiration', sa.String(length=200), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('user_login', sa.String(length=50), nullable=True),
    sa.Column('user_name', sa.String(length=200), nullable=True),
    sa.Column('tags', sa.String(length=100), nullable=True),
    sa.Column('temporary', sa.Boolean(), nullable=True),
    sa.Column('workflow_id', sa.Integer(), nullable=True),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('storage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('type', sa.Enum('__module__', 'HDFS', 'OPHIDIA', 'ELASTIC_SEARCH', 'MONGODB', 'POSTGIS', 'HBASE', 'CASSANDRA', 'JSON', '__dict__', '__weakref__', '__doc__', name='StorageTypeEnumType'), nullable=True),
    sa.Column('url', sa.String(length=1000), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sqlite_autoincrement=True
    )
    op.create_table('attribute',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('type', sa.Enum('__module__', 'FLOAT', 'LAT_LONG', 'TIME', 'DOUBLE', 'DECIMAL', 'ENUM', 'CHARACTER', 'LONG', 'DATETIME', 'VECTOR', 'TEXT', 'DATE', 'INTEGER', 'TIMESTAMP', '__init__', '__dict__', '__weakref__', '__doc__', name='DataTypeEnumType'), nullable=True),
    sa.Column('size', sa.Integer(), nullable=True),
    sa.Column('precision', sa.Integer(), nullable=True),
    sa.Column('nullable', sa.Boolean(), nullable=True),
    sa.Column('enumeration', sa.Boolean(), nullable=True),
    sa.Column('missing_representation', sa.String(length=200), nullable=True),
    sa.Column('feature', sa.Boolean(), nullable=True),
    sa.Column('label', sa.Boolean(), nullable=True),
    sa.Column('distinct_values', sa.Integer(), nullable=True),
    sa.Column('mean_value', sa.Float(), nullable=True),
    sa.Column('median_value', sa.String(length=200), nullable=True),
    sa.Column('max_value', sa.String(length=200), nullable=True),
    sa.Column('min_value', sa.String(length=200), nullable=True),
    sa.Column('std_deviation', sa.Float(), nullable=True),
    sa.Column('missing_total', sa.String(length=200), nullable=True),
    sa.Column('deciles', sa.Text(), nullable=True),
    sa.Column('data_source_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['data_source_id'], ['data_source.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('data_policy',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('datasetname', sa.String(length=500), nullable=True),
    sa.Column('enabled', sa.Boolean(), nullable=True),
    sa.Column('read_only', sa.Boolean(), nullable=True),
    sa.Column('url', sa.String(length=200), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('format', sa.Enum('__module__', 'XML_FILE', 'NETCDF4', 'HDF5', 'SHAPEFILE', 'TEXT', 'CUSTOM', 'JSON', 'CSV', 'PICKLE', '__dict__', '__weakref__', '__doc__', name='DataSourceFormatEnumType'), nullable=True),
    sa.Column('provenience', sa.Text(), nullable=True),
    sa.Column('estimated_rows', sa.Integer(), nullable=True),
    sa.Column('estimated_size_in_mega_bytes', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('expiration', sa.String(length=200), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('user_login', sa.String(length=50), nullable=True),
    sa.Column('user_name', sa.String(length=200), nullable=True),
    sa.Column('tags', sa.String(length=100), nullable=True),
    sa.Column('temporary', sa.Boolean(), nullable=True),
    sa.Column('workflow_id', sa.Integer(), nullable=True),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('data_source_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['data_source_id'], ['data_source.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('privacy_risk',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fieldName', sa.String(length=200), nullable=True),
    sa.Column('privacyAttType', sa.Enum('__module__', 'IDENTIFIER', 'QUASI_IDENTIFIER', 'SENSITIVE', 'NON_SENSITIVE', '__init__', '__dict__', '__weakref__', '__doc__', name='PrivacyTypeEnumType'), nullable=False),
    sa.Column('anonymizationTechnique', sa.Enum('__module__', 'GENERALIZATION', 'SUPPRESSION', 'MASK', 'ENCRYPTION', 'NO_TECHNIQUE', '__init__', '__dict__', '__weakref__', '__doc__', name='AnonymTechniqueEnumType'), nullable=False),
    sa.Column('hierarchy', sa.String(length=200), nullable=True),
    sa.Column('privacyModel', sa.String(length=200), nullable=True),
    sa.Column('privacyModelParameters', sa.String(length=200), nullable=True),
    sa.Column('hierarchyStructureType', sa.String(length=200), nullable=True),
    sa.Column('attribute_id', sa.Integer(), nullable=False),
    sa.Column('ds_id', sa.Integer(), nullable=False),
    sa.Column('policy_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['attribute_id'], ['attribute.id'], ),
    sa.ForeignKeyConstraint(['ds_id'], ['data_source.id'], ),
    sa.ForeignKeyConstraint(['policy_id'], ['data_policy.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('privacy_risk')
    op.drop_table('data_policy')
    op.drop_table('attribute')
    op.drop_table('storage')
    op.drop_table('data_source')
    # ### end Alembic commands ###
